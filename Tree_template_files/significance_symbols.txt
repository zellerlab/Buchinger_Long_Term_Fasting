DATASET_BINARY
#Binary datasets are visualized as filled or empty symbols, depending on the value associated with a node (0 or 1).
#Each node can have multiple associated values, and each value will be represented by a symbol (defined in FIELD_SHAPES) with corresponding color and label (from FIELD_COLORS and FIELD_LABELS).
#Possible values (defined under DATA below) for each node are 1 (filled shapes), 0 (empty shapes) and -1 (completely omitted).

#lines starting with a hash are comments and ignored during parsing

#=================================================================#
#                    MANDATORY SETTINGS                           #
#=================================================================#
#select the separator which is used to delimit the data below (TAB,SPACE or COMMA).This separator must be used throughout this file.
#SEPARATOR TAB
#SEPARATOR SPACE
SEPARATOR COMMA

#label is used in the legend table (can be changed later)
DATASET_LABEL,label1

#dataset color (can be changed later)
COLOR,#ff0000

#shapes for each field column; possible choices are
#1: rectangle 
#2: circle
#3: star
#4: right pointing triangle
#5: left pointing triangle
#6: check mark
FIELD_SHAPES,1

#field labels
FIELD_LABELS,EO,LO

#=================================================================#
#                    OPTIONAL SETTINGS                            #
#=================================================================#

#define colors for each individual field column (if not defined all symbols will use the main dataset color, defined in COLOR above)
#FIELD_COLORS,#ff0000


#=================================================================#
#     all other optional settings can be set or changed later     #
#           in the web interface (under 'Datasets' tab)           #
#=================================================================#

#Each dataset can have a legend, which is defined using LEGEND_XXX fields below
#For each row in the legend, there should be one shape, color and label.
#Optionally, you can define an exact legend position using LEGEND_POSITION_X and LEGEND_POSITION_Y. To use automatic legend positioning, do NOT define these values
#Optionally, shape scaling can be present (LEGEND_SHAPE_SCALES). For each shape, you can define a scaling factor between 0 and 1.
#To order legend entries horizontally instead of vertically, set LEGEND_HORIZONTAL to 1
#Shape should be a number between 1 and 6, or any protein domain shape definition.
#1: square
#2: circle
#3: star
#4: right pointing triangle
#5: left pointing triangle
#6: checkmark

#LEGEND_TITLE,Dataset legend
#LEGEND_POSITION_X,100
#LEGEND_POSITION_Y,100
#LEGEND_HORIZONTAL,0
#LEGEND_SHAPES,1,2,3
#LEGEND_COLORS,#ff0000,#00ff00,#0000ff
#LEGEND_LABELS,value1,value2,value3
#LEGEND_SHAPE_SCALES,1,1,0.5

#always show internal values; if set, values associated to internal nodes will be displayed even if these nodes are not collapsed. It could cause overlapping in the dataset display.
#SHOW_INTERNAL,0

#show dashed lines between leaf labels and the dataset
#DASHED_LINES,1

#left margin, used to increase/decrease the spacing to the next dataset. Can be negative, causing datasets to overlap.
#MARGIN,0
#align symbols to the end of each leaf label (individual dataset field will not be aligned to each other)
#ALIGN_TO_LABELS,1

#symbol height factor; Default symbol height will be slightly less than the available space between leaves, but you can set a multiplication factor here to increase/decrease it (values from 0 to 1 will decrease it, values above 1 will increase it)
#HEIGHT_FACTOR,1

#increase/decrease the spacing between individual levels, when there is more than one binary level defined 
#SYMBOL_SPACING,10

#display or hide the text labels above each field column
#SHOW_LABELS,1

#text label size factor
#SIZE_FACTOR,1

#text label rotation
#LABEL_ROTATION,0

#text label shift in pixels (positive or negative)
#LABEL_SHIFT,0

#An example dataset with 4 columns (circle, left triangle, right triangle and rectangle):
#FIELD_SHAPES,2,4,5,1
#FIELD_LABELS,EO,LO,f2,f3,f4
#FIELD_COLORS,#ff0000,#00ff00,#ffff00,#0000ff

#Internal tree nodes can be specified using IDs directly, or using the 'last common ancestor' method described in iTOL help pages
#=================================================================#
#       Actual data follows after the "DATA" keyword              #
#=================================================================#
DATA
#node 9606 will have a filled circle, outline of a left triangle, nothing in the 3rd column and an rectangle outline in column 4
#9606,1,0,-1,0

Acinetobacter,-1,-1
Actinomyces,-1,-1
Akkermansia,-1,-1
Alistipes,-1,-1
Anaerostipes,-1,-1
Anaerotruncus,1,-1
Atopobium,-1,-1
Bacteroides,-1,-1
Barnesiella,-1,-1
Bifidobacterium,-1,-1
Bilophila,-1,-1
Blautia,-1,-1
Campylobacter,-1,-1
Clostridioides,-1,-1
Clostridium,-1,-1
Collinsella,-1,-1
Coprobacillus,-1,-1
Coprococcus,-1,-1
Dialister,-1,-1
Dorea,-1,-1
Eggerthella,-1,-1
Enterococcus,-1,-1
Erysipelatoclostridium,-1,-1
Escherichia,-1,-1
Eubacterium,-1,1
Faecalibacterium,-1,1
Faecalicatena,-1,-1
Fusobacterium,1,1
Gemella,1,1
Haemophilus,-1,-1
Holdemanella,-1,-1
Intestinibacter,-1,-1
Klebsiella,-1,-1
Lachnoclostridium,-1,-1
Lactobacillus,-1,-1
Mogibacterium,-1,-1
Odoribacter,-1,-1
Oscillibacter,-1,-1
Parabacteroides,-1,1
Paraprevotella,-1,-1
Parasutterella,-1,-1
Parvimonas,1,1
Peptostreptococcus,1,1
Porphyromonas,1,1
Prevotella,-1,-1
Pseudoflavonifractor,-1,-1
Roseburia,-1,1
Ruminococcus,-1,-1
Streptococcus,-1,-1
Streptomyces,-1,-1
Sutterella,-1,-1
Tyzzerella,-1,1
Veillonella,-1,-1
